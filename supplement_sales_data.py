# -*- coding: utf-8 -*-
"""Supplement Sales Data.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jT-OakF_HmNPM0ltFRtcQdJs9vR6y-XX
"""

#‚úÖ Step 1: Load the Dataset

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns



#Load the CSV file

df = pd.read_csv('/content/Supplement_Sales_Weekly_Expanded.csv')



#‚úÖ Step 2: Data Overview

print(df.shape)          # Rows, columns



print(df.columns)        # Column names



df.head()        # First 5 rows



#‚úÖ Step 3: Data Types & Missing Values

print(df.dtypes)         # Data types



print(df.isnull().sum()) # Missing values



#‚úÖ Step 4: Convert Date Column

df['Date'] = pd.to_datetime(df['Date'], errors='coerce')



#‚úÖ Step 5: Summary Statistics

print(df.describe())  # Summary stats for numeric columns



#‚úÖ Step 6: Category-wise Counts

print(df['Category'].value_counts())     # Count of each category
print(df['Platform'].value_counts())     # Count of each platform
print(df['Location'].value_counts())     # Count of each location



#‚úÖ Step 7: Revenue Trend Over Time

# Group by date and plot revenue
df.groupby('Date')['Revenue'].sum().plot(figsize=(12, 6), title='Total Revenue Over Time')
plt.xlabel("Date")
plt.ylabel("Revenue")
plt.grid()
plt.show()



#‚úÖ Step 8: Top-Selling Products

top_products = df.groupby('Product Name')['Units Sold'].sum().sort_values(ascending=False).head(10)
print(top_products)

top_products = df.groupby('Product Name')['Units Sold'].sum().sort_values(ascending=False).head(10)
top_products.plot(kind='bar', title='Top 10 Best-Selling Products', figsize=(10, 5))
plt.ylabel("Total Units Sold")
plt.xticks(rotation=45)
plt.grid()
plt.show()



#‚úÖ Step 9: Correlation Heatmap

sns.heatmap(df.corr(numeric_only=True), annot=True, cmap='coolwarm')
plt.title("Correlation Matrix")
plt.show()



#‚úÖ Step 10: Discount vs Revenue Analysis

plt.figure(figsize=(12, 8))
sns.scatterplot(x="Discount", y="Revenue", data=df)
title=("Discount vs Revenue")
plt.show()



#‚úÖ Step 11. Category-wise Revenue

category_revenue = df.groupby("Category")["Revenue"].sum().sort_values(ascending=False)
category_revenue.plot(kind='bar', title='Category-wise Revenue', figsize=(10, 5), color="skyblue")
plt.ylabel("Total Revenue")
plt.xticks(rotation=45)
plt.grid()
plt.show()



#Step 12. Month-wise Revenue Trend

#Step 1: Create a "Month" column

df['Month'] = df['Date'].dt.to_period('M').astype(str)



#Step 2: Plot revenue per month

monthly_revenue = df.groupby("Month")["Revenue"].sum()
monthly_revenue.plot(kind="line", marker="o", figsize=(10, 6), title= "Monthly Revenue Trend")
plt.xlabel("Month")
plt.ylabel("Revenue")
plt.grid()
plt.xticks(rotation=45)
plt.show()



#Step 13. Advanced Analysis ‚Äî Category + Platform Heatmap



pivot=df.pivot_table(index="Category", columns="Platform", values="Revenue", aggfunc='sum')
sns.heatmap(pivot, annot=True, fmt='.0f', cmap='YlGnBu')
plt.title("Revenue by Category and Platform")
plt.show()





#üîç Step 14: Returned Units Analysis

top_returns = df.groupby('Product Name')['Units Returned'].sum().sort_values(ascending=False).head(10)
top_returns.plot(kind='bar', title='Top 10 Products with Most Returns', figsize=(10, 5), color='orange')
plt.ylabel("Units Returned")
plt.xticks(rotation=45)
plt.grid()
plt.show()



#That's it.........

























































